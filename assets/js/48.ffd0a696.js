(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{457:function(t,e,a){"use strict";a.r(e);var s=a(2),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"安装支持包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装支持包"}},[t._v("#")]),t._v(" 安装支持包")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("apt install wget libnss3-tools -y\n")])])]),e("h2",{attrs:{id:"下载mkcert"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下载mkcert"}},[t._v("#")]),t._v(" 下载Mkcert")]),t._v(" "),e("p",[t._v("建议挂代理下载"),e("br"),t._v(" "),e("code",[t._v("https://github.moeyy.xyz/")]),e("br"),t._v(" "),e("code",[t._v("https://mirror.ghproxy.com/")]),e("br"),t._v(" "),e("code",[t._v("https://gitdl.cn/")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("wget --no-check-certificate https://github.com/FiloSottile/mkcert/releases/download/v1.4.3/mkcert-v1.4.3-linux-amd64\n")])])]),e("h2",{attrs:{id:"添加到系统路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加到系统路径"}},[t._v("#")]),t._v(" 添加到系统路径")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("mv mkcert-v1.4.3-linux-amd64 /usr/bin/mkcert\n")])])]),e("h2",{attrs:{id:"设置执行权限"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置执行权限"}},[t._v("#")]),t._v(" 设置执行权限")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("chmod +x /usr/bin/mkcert\n")])])]),e("h2",{attrs:{id:"验证-mkcert-版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证-mkcert-版本"}},[t._v("#")]),t._v(" 验证 Mkcert 版本")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("mkcert -version\n")])])]),e("p",[t._v("您应该看到以下输出："),e("br"),t._v(" "),e("code",[t._v("v1.4.3")])]),t._v(" "),e("h2",{attrs:{id:"生成本地-ca"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成本地-ca"}},[t._v("#")]),t._v(" 生成本地 CA")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("mkcert -install\n")])])]),e("p",[t._v("您应该看到以下输出："),e("br"),t._v(" "),e("code",[t._v("Created a new local CA ????")]),e("br"),t._v(" "),e("code",[t._v("The local CA is now installed in the system trust store! ??")]),e("br"),t._v(" "),e("code",[t._v("The local CA is now installed in the Firefox and/or Chrome/Chromium trust store (requires browser restart)! ????")]),e("br"),t._v("\n您可以使用以下命令检查 CA 证书的路径：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("mkcert -CAROOT\n")])])]),e("p",[t._v("您应该看到以下输出："),e("br"),t._v(" "),e("code",[t._v("/root/.local/share/mkcert")])]),t._v(" "),e("h2",{attrs:{id:"生成本地网站证书"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成本地网站证书"}},[t._v("#")]),t._v(" 生成本地网站证书")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("mkcert domain.com\n")])])]),e("p",[t._v("您应该看到以下输出："),e("br"),t._v(" "),e("code",[t._v("Created a new certificate valid for the following names ????")]),e("br"),t._v(" "),e("code",[t._v('- "domain.com"')]),e("br"),t._v(" "),e("code",[t._v('The certificate is at "./domain.com.pem" and the key at "./domain.com-key.pem" ?')]),e("br"),t._v(" "),e("code",[t._v("It will expire on 1 November 2023 ????")])]),t._v(" "),e("p",[t._v("生成的证书在当前目录下"),e("br"),t._v(" "),e("code",[t._v("domain.com.pem")]),e("br"),t._v(" "),e("code",[t._v("domain.com-key.pem")])]),t._v(" "),e("h2",{attrs:{id:"启用生成的证书"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启用生成的证书"}},[t._v("#")]),t._v(" 启用生成的证书")]),t._v(" "),e("p",[t._v("将生成的证书文件复制到"),e("code",[t._v("/etc/ssl/")]),t._v("目录")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("cp domain.com* /etc/ssl/\n")])])]),e("h2",{attrs:{id:"修改nginx配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改nginx配置文件"}},[t._v("#")]),t._v(" 修改nginx配置文件")]),t._v(" "),e("p",[e("code",[t._v("/etc/nginx/conf.d/nginx.conf")]),e("br"),t._v("\n配置方法参考下面的代码")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("#/etc/nginx/conf.d/nginx.conf\nserver{\n        root /var/www/[ROOTDIR];\n        index index.php index.html index.htm index.nginx-debian.html;\n\n        server_name [DOMAIN].net;\n\n        location / {\n                try_files $uri $uri/ /index.php?$args;\n        }\n        location ~ \\.php$ {\n                include snippets/fastcgi-php.conf;\n                fastcgi_pass unix:/run/php/php7.4-fpm.sock;\n        }\n    listen 443 ssl; \n    ssl_certificate /etc/ssl/[DOMAIN].pem; \n    ssl_certificate_key /etc/ssl/[DOMAIN]-key.pem; \n}\n\nserver{\n    if ($host = www.[DOMAIN].net) {\n        return 301 https://$host$request_uri;\n    }\n    if ($host = [DOMAIN].net) {\n        return 301 https://$host$request_uri;\n    }\n        listen 80 ;\n\n        server_name [DOMAIN].net www.[DOMAIN].net;\n    return 404; \n}\n")])])]),e("h2",{attrs:{id:"测试nginx配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试nginx配置文件"}},[t._v("#")]),t._v(" 测试nginx配置文件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("nginx -t\n")])])]),e("h2",{attrs:{id:"重启-nginx-服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重启-nginx-服务"}},[t._v("#")]),t._v(" 重启 Nginx 服务")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("systemctl restart nginx\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);